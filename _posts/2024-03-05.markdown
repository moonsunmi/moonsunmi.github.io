---
layout: post
title: "서버사이드렌더링에서 말하는 렌더링과 클라이언트사이드렌더링에서 말하는 렌더링은 다르다"
date: 2024-03-02 12:18:07 +0900
tags: post
---

서버사이드렌더링(SSR)과 클라이언트사이드렌더링(CSR)은 말 그대로 렌더링을 서버 쪽에서 하느냐 클라이언트 쪽에서 하느냐로 구분된다.

정의도 알고, 어떤 부분에서 SSR은 서버에서 처리되고 CSR에서는 클라이언트에서 처리되는지도 알고 있다. 하지만 렌더링이라는 말이 뭔가 와닿지 않았다.

렌더링이란 HTML, CSS, Javascript 문서를 기준으로, 사용자에게 화면을 보여주기 위해서 그리는 일련의 과정을 말한다.

CSR 같은 경우는 서버에서 문서를 받아오고, 브라우저가 앞에서 말한 정의의 ‘렌더링’ 과정을 진행한다.

내가 가장 이해가 되지 않았던 부분은 결국 결국 렌더링이란 최종적으로 브라우저가 하는 것이고, 브라우저는 클라이언트 쪽에 있을 텐데, 어떻게 서버에서의 렌더링이 가능하냐는 거였다.

렌더링, SSR vs. CSR에 대한 여러 글이 있었지만, 나에게 가장 도움이 되는 글은 바로 이거였다.

[SSR(서버사이드 렌더링)이 대체 뭐야?](<https://jaeone94.github.io/posts/Web-SSR(%EC%84%9C%EB%B2%84%EC%82%AC%EC%9D%B4%EB%93%9C-%EB%A0%8C%EB%8D%94%EB%A7%81)%EC%9D%B4-%EB%8C%80%EC%B2%B4-%EB%AD%90%EC%95%BC/>)

SSR의 서버에서 하는 ‘렌더링’은 CSR에서와 조금 다르다. 일반적인 ‘렌더링’ 정의는 CSR을 기준으로 하기에 SSR에서의 ‘렌더링’이 좀 이해가 안 되었던 것 같다.

SSR에서의 렌더링은 일반적으로 말하는 렌더링보다는 좁은 개념이다. SRR의 서버에서 하는 렌더링은 HTML 마크업을 완성하는 것만 해당된다. 결국 SSR에서도 최종 렌더링은 클라이언트의 브라우저에서 한다는 소리다.

CSR에서 렌더링은 웹 페이지를 사용자에게 보여주기 위한 전체 과정을 말하며, 이 과정에는 HTML 마크업 완성, CSS 스타일 적용, JavaScript 실행 등이 포함된다.

(HTML의 마크업이 완성된 상태란, 동적으로 정해질 수 있는 요소들이 전부 확정이 되어 웹 페이지의 구조가 완성된 상태를 말한다.)
