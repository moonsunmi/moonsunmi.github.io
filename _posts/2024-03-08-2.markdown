---
layout: post
title: "React deep dive) 비동기 처리"
date: 2024-03-08 12:18:07 +0900
tags: deepdive
---

자바스크립트는 싱글 스레드에서 동작하므로 동기 방식으로만 처리할 수 있다.

비동기는 병렬 방식으로 작업을 한꺼번에 처리하며, 요청을 시작한 후에 응답이 오든말든 다음 작업을 진행한다. 따라서 한번에 여러 작업이 실행될 수 있다.

호출 스택(call stack): 자바스크립트에서 수행해야 할 코드나 함수를 순차적으로 담아두는 스택이다.

### 자바스크립트의 비동기 처리 방법

이벤트루프(Event loop): 자바스크립트의 실행 모델을 관리하는 구조이다. 이벤트 루프는 콜 스택과 태스크 큐를 감시하고 있다. 호출 스택이 비어 있는지 확인하고, 작업해야 할 게 있다면 실행한다. 이 두 작업 또한 단일 스레드에서 일어나므로 동시에 발생하지 않는다.

비동기 함수인 `setTimeOut`도 우선 호출 스택에 들어간다. 그다음 타이머 이벤트가 실행되고, 실행되어야 할 태스크들의 집합인 태스크 큐로 들어간다. 그리고 바로 호출 스택에서 제거된다.

호출 스택이 완전히 비게 되면, 그제서야 태스크 큐에 남아 있던 `setTimeOut`이 실행된다. 호출 스택이 비어 있는지 확인하고, 태스크 큐에 작업이 남아 있는지 확인하고, 필요한 작업을 자바스크립트 엔진을 이용해서 실행하는 일은 전부 이벤트 루프가 한다.

태스크 큐는 자료구조가 큐가 아니라 set인데, 무조건 선입선출로 진행되는 게 아니라 실행이 가능한 상태가 된 것들 중에서 순서를 매겨 진행해야 하기 때문이다.

### 태스크 큐와 마이크로 태스크 큐

자바스크립트에서 비동기 작업은 태스크 큐와 마이크로 태스크 큐에서 처리된다. 이벤트 루프에는 하나 이상의 태스크 큐, 하나의 마이크로 태스크 큐가 있다. 태스크 큐에는 `setTimeOut`, `setInterval` 같은 타이머 콜백, DOM 이벤트, AJAX 콜백 등이 들어가고, 마이크로 태스크 큐에는 `Promise`의 `then` 콜백, `async/await`, `mutationObserver` 같은 것들이 들어간다.

마이크로 태스크 큐는 다른 태스크 뷰에 비해 우선권을 가지기 때문에 `Promise`가 `setTimeout`보다 우선적으로 실행된다.

브라우저에 렌더링하는 작업은 마이크로 큐와 매크로 큐 사이에서 일어난다.
