---
layout: post
title: "Functional Components와 Class Components의 차이"
date: 2024-03-21 12:28:07 +0900
tags: post
---

리액트의 컴포넌트는 두 가지 방식으로 선언할 수 있다. 함수형 컴포넌트와 클래스형 컴포넌트이다.

클래스 컴포넌트는 `render` 메서드가 있는 `React.Component`를 상속받아 구현하는 자바스크립트 클래스이다.

그래서 다음과 같이 `React.Component`를 상속 받는 부분과 `render` 메서드가 반드시 필요하다.

```js
class App extends Component {
  render() {
    return <div>hi</div>;
  }
}
```

함수형 컴포넌트는 함수 자체가 렌더 함수이기 때문에 `render` 메서드를 사용하지 않아도 된다.

클래스 컴포넌트에서는 생명주기 메서드를 사용할 수 있는데, 이 메서드는 Component에서 상속 받은 것이다.

따라서 함수형 컴포넌트에서는 생명주기 메서드를 사용할 수 없는데, `useEffect` 훅을 이용하면 `componentDidMount`, `componentDidUpdate`, `componentWillUnmount`를 비슷하게 구현할 수 있다.

함수형 컴포넌트는 문법이 보다 간결하며, 메모리 효율성도 좋다. 커스텀 훅을 사용할 경우 컴포넌트 간의 상태 로직을 쉽게 재사용할 수도 있다.

### React의 Virtual DOM이 실제 DOM과 어떻게 다른지, 그리고 왜 중요한지 설명해 주세요.

DOM은 웹페이지에 대한 인터페이스로, 웹페이지가 콘텐츠와 구조를 어떻게 보여줄지에 대한 정보를 가지고 있다.

가상 DOM은 실제 DOM의 사본으로, React 등의 라이브러리에서 사용자 인터페이스를 더 효율적으로 업데이트하기 위해 사용된다.

렌더링 과정을 보면 다음과 같다.

브라우저가 HTML을 다운로드하면, 브라우저의 렌더링 엔진은 이 HTML을 파싱해 DOM 노드로 구성된 트리를 만든다.

CSS 파일을 만나면 CSS 파일도 다운로드하고, 브라우저의 렌더링 엔진이 이 CSS도 파싱해 CSSOM을 만든다.

그다음 DOM을 순회하고 CSS 스타일을 적용한다.

이처럼 웹페이지를 렌더링하는 과정은 복잡하고 많은 비용이 든다.

가상 DOM을 이용하면 변경이 발생할 때마다 가상 DOM에 먼저 적용하고, 실제 DOM과 비교해서 변경된 부분만 반영한다. 이렇게 하면 최소한의 DOM 조작으로 화면을 업데이트할 수 있다. 이를 리콘실리에이션이라고 한다.

가상 DOM을 사용해 필요한 DOM 업데이트만을 수행하면 실제 DOM을 수정하는 것에 비해 애플리케이션의 성능을 크게 향상시킬 수 있다.
