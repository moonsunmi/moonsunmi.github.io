---
layout: post
title: "TIL) 리액트를 다루는 기술(useReducer)"
date: 2022-11-10 12:18:07 +0900
tags: React
---

### useReducer

useState처럼 상태를 관리한다. 그런데 상태를 컴포넌트에 종속적이지 않게 만들 수 있다.
어느 컴포넌트에서도 접근 가능하도록.

inputs 상태와 users 상태를 다루고 있으므로 다음과 같이...

```
const [state, dispatch] = useReducer(reducer, INITIAL_STATE)
const { users } = state;
const { username, email } = state.inputs;
```

초기화는 다음과 같이 해 준다. state가 다음과 같은 구조로 되어 있는 것이다.

```js
const initialState = {
  inputs: {
    username: "",
    nickname: "",
  },
  users: [
    { id: 1, username: "도민준", nickname: "민준맘", active: true },
    { id: 2, username: "공유", nickname: "도깨비", active: false },
    { id: 3, username: "곽상준", nickname: "각도기", active: false },
  ],
};
```

reducer는 다음과 같이... 그런데 input 값의 작동이 잘 안 되고 있다..

```js
function reducer(state, action) {
  // action: dispatch 함수에서 넘겨 준 값.
  //         onChange의 경우 { type: "CHANGE_INPUT", name, value }
  //         onCreate의 경우 { type: "CREATE_USER", user: { id: nextId.current, username, nickname },}
  console.log("action:", action);
  console.log("state:", state);
  console.log("action.name:", action.name);
  switch (action.type) {
    case "CHANGE_INPUT":
      return {
        ...state,
        input: { ...state.inputs, [action.name]: action.value },
      };
    case "CREATE_USER":
      return {
        inputs: initialState.inputs,
        users: state.users.concat(action.user),
      };
    default:
      return state;
  }
}
```

<hr />
목) 운동

| 종아리 | 앞벅지 | 복근 |
| ------ | ------ | ---- |
| 3/3    | 3/3    | 0/3  |
