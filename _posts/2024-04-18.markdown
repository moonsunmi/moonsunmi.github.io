---
layout: post
title: "Next.js에서 MUI를 쓸 때 기본 세팅"
date: 2024-04-18 12:28:07 +0900
tags: post
---

Next.js에서 MUI를 쓰려면, 추가적인 설정이 필요하다. App router와 Pages router 방식이 조금 다른데, 나는 App router를 쓰므로 이에 맞춰서 세팅했다.

1. 의존성 설치하기
   mui/material과 next 외의 추가적으로 설치해야 하는 의존성이 있다. 다음과 같이 설치한다.

```
yarn add @mui/material-nextjs @emotion/cache
```

2. AppRouterCacheProvider 사용하기
   app/layout.tsx에서 body 태그 안에 AppRouterCacheProvider를 사용해 children을 감싼다.

```tsx
+import { AppRouterCacheProvider } from '@mui/material-nextjs/v14-appRouter';

 export default function RootLayout(props) {
   return (
     <html lang="en">
       <body>
        <AppRouterCacheProvider>
           {props.children}
        </AppRouterCacheProvider>
       </body>
     </html>
   );
 }

```

import 문에서 v14는 Next.js의 버전을 의미한다. 나는 14를 써서 14로 표기했다.

`AppRouterCacheProvider`가 있어야 서버에서 만들어진 CSS가 확실하게 클라이언트로 전달된다. Next.js가 HTML 페이지의 청크를 클라이언트에 스트리밍할 때,CSS를 head 태그에 추가하여 준다.

만약 이 컴포넌트를 사용하지 않으면, CSS가 body 태그 안에서 렌더링되어 스타일이 제대로 적용되지 않는 현상이 발생할 수 있다.

3. theme을 만들어, app/layout에서 공급해 준다.
   theme을 만들기만 해도 MUI에서 제공하는 기본적인 테마가 지정된다. 내 프로젝트에는 한글을 쓰기 때문에 서체만 우선 바꾸어 주었다.

```js
"use client";
import { Noto_Sans_KR } from "next/font/google";
import { createTheme } from "@mui/material/styles";

const notoSans = Noto_Sans_KR({
  weight: ["300", "400", "500", "700"],
  subsets: ["latin"],
  display: "swap",
});

const theme = createTheme({
  typography: {
    fontFamily: notoSans.style.fontFamily,
  },
});

export default theme;
```

이 테마를 Provider로 제공해준다.

```tsx
"use client";

import { AppRouterCacheProvider } from "@mui/material-nextjs/v14-appRouter";
import { ThemeProvider } from "@emotion/react";
import theme from "utils/theme";

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body>
        <AppRouterCacheProvider>
          <ThemeProvider theme={theme}>{children}</ThemeProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
```

[MUI 공식 문서](https://mui.com/material-ui/integrations/nextjs/)
