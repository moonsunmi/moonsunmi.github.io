---
layout: post
title: "TIL) 리액트를 다루는 기술(메인 예제, 안 보고 만들어 보기)"
date: 2022-11-14 12:18:07 +0900
categories: react
---

| (달성/목표) | 뽀모도리 |
| ----------- | -------- |
| 1일         | 5 / 5    |
| 1주         | 5 /40    |

### 기술

유저네임과 이메일을 등록하는 예제를 코드를 보지 않고, 직접 만들어 보기로 했다. 입력 창 두 개를 한꺼번에 리셋하는 게 안 된다...
그래도 배열의 추가, 삭제, 수정은 조금 더 감이 오는 듯...

App.js

```js
import "./App.css";
import { useRef, useState } from "react";
import UserList from "./UserList";
import CreateUsers from "./CreateUsers";

const initialUsers = [
  {
    id: 1,
    username: "velopert",
    email: "public.velopert@gmail.com",
    active: false,
  },
  { id: 2, username: "tester", email: "tester@example.com", active: false },
  { id: 3, username: "liz", email: "liz@example.com", active: false },
];

function App() {
  const [inputs, setInputs] = useState({ username: "", email: "" });
  const [users, setUsers] = useState(initialUsers);
  const nextUserId = useRef(4);
  const usernameRef = useRef();
  const onChange = (e) => {
    const { name, value } = e.target;

    return setInputs((prevState) => ({ ...prevState, [name]: value }));
  };

  const onRemove = (id) => {
    setUsers(users.filter((user) => user.id !== id));
  };

  const toggleActive = (id) => {
    console.log(id);
    console.log(users);
    setUsers(
      users.map((user) =>
        user.id == id ? { ...user, active: !user.active } : user
      )
    );
  };
  const onCreate = () => {
    setUsers((users) => [
      ...users,
      {
        id: nextUserId.current,
        username: inputs.username,
        email: inputs.email,
        active: false,
      },
    ]);
    setInputs((prevState) => ({ ...prevState, username: "", email: "" }));
    nextUserId.current += 1;
    usernameRef.current.focus();
  };

  return (
    <div>
      <CreateUsers
        usernameRef={usernameRef}
        inputs={inputs}
        onChange={onChange}
        onReset={onCreate}
      />
      <UserList users={users} onRemove={onRemove} toggleActive={toggleActive} />
    </div>
  );
}

export default App;
```

CreateUsers.js

```js
import React from "react";

const CreateUsers = ({ usernameRef, inputs, onChange, onReset }) => {
  return (
    <div>
      <input
        ref={usernameRef}
        name="username"
        type="text"
        placeholder="계정명"
        onChange={onChange}
        value={inputs.username}
      />
      <input
        name="email"
        type="text"
        placeholder="이메일"
        onChange={onChange}
        value={inputs.emial}
      />
      <button onClick={onReset}>등록</button>
    </div>
  );
};

export default CreateUsers;
```

UserList.js

```js
import React from "react";

const User = ({ user, onRemove, toggleActive }) => {
  return (
    <div>
      <b
        style={% raw %}{{ cursor: "pointer", color: user.active ? "green" : "black" }}{% endraw %}
        onClick={() => toggleActive(user.id)}
      >
        {user.username}
      </b>
      <span>({user.email})</span>
      <button onClick={() => onRemove(user.id)}>삭제</button>
    </div>
  );
};

const UserList = ({ users, onRemove, toggleActive }) => {
  return (
    <div>
      {users.map((user) => (
        <User
          user={user}
          key={user.id}
          onRemove={onRemove}
          toggleActive={toggleActive}
        />
      ))}
    </div>
  );
};

export default UserList;

```

<hr />
월) 운동<br>
