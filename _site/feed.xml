<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-08-01T23:12:59+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">주경야독학) 개발공부로그</title><subtitle>주경야독, 독학으로 웹 프로그래밍을 공부하고 있습니다.</subtitle><author><name>Sunmi Moon</name><email>celebmoon@naver.com</email></author><entry><title type="html">TIL) CORS 에러와 Django에서 해결</title><link href="http://localhost:4000/2023-07-28/TIL" rel="alternate" type="text/html" title="TIL) CORS 에러와 Django에서 해결" /><published>2023-07-28T12:18:07+09:00</published><updated>2023-07-28T12:18:07+09:00</updated><id>http://localhost:4000/2023-07-28/TIL</id><content type="html" xml:base="http://localhost:4000/2023-07-28/TIL"><![CDATA[<p>프론트에서 다음과 같은 CORS 에러가 발생했다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Access to XMLHttpRequest at 'https://...' from origin 'http://localhost:3000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.
</code></pre></div></div>

<p>여기서 CORS는 Cross-Origin Resource Sharing 교차 출처 리소스 공유 정책을 말한다.
origin은 출처를 말하는데, protocol + host(사이트 도메인) + 포트번호
즉, 나의 경우는 http://localhost:3000</p>

<p>공유 정책에는 Same Origin 정책과 Cross Origin 	정책이 있고, 그 정책들은 HTTP 요청에 따라 다른 정책으로 지원한다.</p>

<p>SOP는 동일 출처 정책으로, 동일한 출처에서만 리소스를 공유할 수 있다. 동일 출처가 아닌 경우 접근을 차단하는 정책. 다른 사이트에서 리소스를 가져오지 않으니 해커의 공격에 조금 더 안전하다.</p>

<p>여기서 출처의 비교는 브라우저에서 한다. 그래서 네트워크 탭에서는 요청 정보가 제대로 보이는데, CORS 에러는 뜨게 된다.</p>

<p>당연히 동일 출처의 리소스만 사용하는 것에는 한계가 있다. 그래서 SOP에서 예외 사항을 두었는데, 그중에 하나가 바로 CORS 교차 출처 리소스 공유 정책.
SOP 정책을 위반하더라도 CORS 정책을 지키면 다른 출처의 리소스도 사용 가능하게 된다.</p>

<p>클라이언트에서 서버에 요청 시, 요청 헤더에 origin 정보를 함께 보낸다. 그리고 서버에서 응답 시, 응답 헤더에 Access-Control-Allow-Origin 정보를 함께 보낸다.</p>

<p>브라우저에서는 이 둘을 비교하여 접근을 차단할지 말지 정한다.</p>

<p>Django에서는 Access-Controll-Allow-Origin을 Django-cors-headers를 사용해서 추가할 수 있다.</p>

<p>setting을 다음과 같이 해 주면, 교차 출처 리소스를 무조건 가져올 수 있고,</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CORS_ORIGIN_ALLOW_ALL = False
</code></pre></div></div>
<p>다음과 같이 whitelist에 추가해 주면, 해당 출처만 허용된다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CORS_ORIGIN_WHITELIST = [
    "http://localhost:3000",
]
</code></pre></div></div>]]></content><author><name>Sunmi Moon</name><email>celebmoon@naver.com</email></author><category term="Django" /><summary type="html"><![CDATA[프론트에서 다음과 같은 CORS 에러가 발생했다.]]></summary></entry><entry><title type="html">TIL) csv import/export in Django</title><link href="http://localhost:4000/2023-07-24/TIL" rel="alternate" type="text/html" title="TIL) csv import/export in Django" /><published>2023-07-24T12:18:07+09:00</published><updated>2023-07-24T12:18:07+09:00</updated><id>http://localhost:4000/2023-07-24/TIL</id><content type="html" xml:base="http://localhost:4000/2023-07-24/TIL"><![CDATA[<p>admin 화면을 구성하려면 csv 등의 파일을 improt하거나 export하는 게 필요할 때가 있다. admin에서 export만 구현하려면 다음과 같이 하면 된다.
서비스 내에서 자체적인 콘텐츠를 제공하는 형태가 아니라면 export로도 충분할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">def</span> <span class="nf">export_as_csv</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">queryset</span><span class="p">):</span>
     <span class="n">meta</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">model</span><span class="p">.</span><span class="n">_meta</span>
     <span class="n">field_names</span> <span class="o">=</span> <span class="p">[</span><span class="n">field</span><span class="p">.</span><span class="n">name</span> <span class="k">for</span> <span class="n">field</span> <span class="ow">in</span> <span class="n">meta</span><span class="p">.</span><span class="n">fields</span><span class="p">]</span>


     <span class="n">response</span> <span class="o">=</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="n">content_type</span><span class="o">=</span><span class="s">'text/csv'</span><span class="p">,</span> <span class="n">charset</span><span class="o">=</span><span class="s">'euc-kr'</span><span class="p">)</span>
     <span class="n">response</span><span class="p">[</span><span class="s">'Content-Disposition'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'attachment; filename={}.csv'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">meta</span><span class="p">)</span>
     <span class="n">writer</span> <span class="o">=</span> <span class="n">csv</span><span class="p">.</span><span class="n">writer</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>


     <span class="n">writer</span><span class="p">.</span><span class="n">writerow</span><span class="p">(</span><span class="n">field_names</span><span class="p">)</span>
     <span class="k">for</span> <span class="n">obj</span> <span class="ow">in</span> <span class="n">queryset</span><span class="p">:</span>
         <span class="n">row</span> <span class="o">=</span> <span class="n">writer</span><span class="p">.</span><span class="n">writerow</span><span class="p">([</span><span class="nb">getattr</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="n">field</span><span class="p">)</span> <span class="k">for</span> <span class="n">field</span> <span class="ow">in</span> <span class="n">field_names</span><span class="p">])</span>


     <span class="k">return</span> <span class="n">response</span>
 <span class="n">export_as_csv</span><span class="p">.</span><span class="n">short_description</span> <span class="o">=</span> <span class="s">"Export Selected"</span>
</code></pre></div></div>

<p>자체 콘텐츠가 있고, 그 콘텐츠를 서비스에서 제공하는 형태라면 import 기능도 필요할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">import_as_csv</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">request</span><span class="p">):</span>
   <span class="k">if</span> <span class="n">request</span><span class="p">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">'POST'</span><span class="p">:</span>
       <span class="n">csv_file</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">FILES</span><span class="p">[</span><span class="s">'csv_file'</span><span class="p">]</span>
       <span class="n">reader</span> <span class="o">=</span> <span class="n">csv</span><span class="p">.</span><span class="n">reader</span><span class="p">(</span><span class="n">csv_file</span><span class="p">)</span>
       <span class="bp">self</span><span class="p">.</span><span class="n">message_user</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">'Your csv file has been imported'</span><span class="p">)</span>
       <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">'..'</span><span class="p">)</span>
   <span class="n">form</span> <span class="o">=</span> <span class="n">CsvImportForm</span><span class="p">()</span>
   <span class="n">payload</span> <span class="o">=</span> <span class="p">{</span><span class="s">'form'</span><span class="p">:</span> <span class="n">form</span><span class="p">}</span>
   <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">'admin/csv_form.html'</span><span class="p">,</span> <span class="n">payload</span><span class="p">)</span>
</code></pre></div></div>

<p>그런데 보다시피, csv 파일을 업로드할 페이지(csv_form.html)를 따로 만들어야 한다.</p>

<div class="language-django highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="cp">{%</span> <span class="k">extends</span> <span class="s1">'admin/base.html'</span> <span class="cp">%}</span>

<span class="cp">{%</span> <span class="k">block</span> <span class="nv">content</span> <span class="cp">%}</span>
    <span class="nt">&lt;div&gt;</span>
        <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"."</span> <span class="na">method=</span><span class="s">"POST"</span> <span class="na">enctype=</span><span class="s">"multipart/form-data"</span><span class="nt">&gt;</span>
            <span class="cp">{{</span> <span class="nv">form.as_p</span> <span class="cp">}}</span>
            <span class="cp">{%</span> <span class="nv">csrf_token</span> <span class="cp">%}</span>

                <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span><span class="nt">&gt;</span>Upload CSV<span class="nt">&lt;/button&gt;</span>
        <span class="nt">&lt;/form&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;br</span> <span class="nt">/&gt;</span>

<span class="cp">{%</span> <span class="k">endblock</span> <span class="cp">%}</span>

</code></pre></div></div>

<p>(장고 template 정말 오랜만에 봄..)</p>

<p>django-rest-framework를 사용하면서 템플릿을 하나도 안 쓰고 있는데, csv export 때문에 template을 만드는 건 좀 어색한 것 같았다.</p>

<p>다른 방법으로 django-import-export 라이브러리를 사용할 수도 있다. 당연히 그냥 장고를 쓸 때도 쓸 수 있다.</p>

<p>https://django-import-export.readthedocs.io/en/latest/</p>

<p>쉽게 구현할 수 있고, csv 외의 다른 파일 형태도 많이 지원한다.</p>]]></content><author><name>Sunmi Moon</name><email>celebmoon@naver.com</email></author><category term="Django," /><category term="DRF" /><summary type="html"><![CDATA[admin 화면을 구성하려면 csv 등의 파일을 improt하거나 export하는 게 필요할 때가 있다. admin에서 export만 구현하려면 다음과 같이 하면 된다. 서비스 내에서 자체적인 콘텐츠를 제공하는 형태가 아니라면 export로도 충분할 수 있다.]]></summary></entry><entry><title type="html">TIL) 모바일에서만 적용되는 기능 추가하기</title><link href="http://localhost:4000/2023-06-26/TIL" rel="alternate" type="text/html" title="TIL) 모바일에서만 적용되는 기능 추가하기" /><published>2023-06-26T12:18:07+09:00</published><updated>2023-06-26T12:18:07+09:00</updated><id>http://localhost:4000/2023-06-26/TIL</id><content type="html" xml:base="http://localhost:4000/2023-06-26/TIL"><![CDATA[<p>모바일 기기에서만 적용되는 기능을 사용하고 싶을 수 있다. 보통은 width를 기준으로 판단하는데, 나는 기기가 정말로 모바일인지를 판단해서 적용해야 했다.</p>

<p><code class="language-plaintext highlighter-rouge">navigator.userAgentData.mobile</code>은 웹사이트에 접속한 기기가 모바일인지 아닌지 boolean 값으로 반환한다. 이를 조건절로 사용해 css나 기능을 추가할 수 있다.</p>

<p>그런데 타입스크립트에서 쓰면 다음과 같은 에러가 발생한다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">TS2551</span><span class="p">:</span> <span class="nx">Property</span> <span class="dl">'</span><span class="s1">userAgentData</span><span class="dl">'</span> <span class="nx">does</span> <span class="nx">not</span> <span class="nx">exist</span> <span class="nx">on</span> <span class="kd">type</span> <span class="dl">'</span><span class="s1">Navigator</span><span class="dl">'</span><span class="p">.</span> <span class="nx">Did</span> <span class="nx">you</span> <span class="nx">mean</span> <span class="dl">'</span><span class="s1">userAgent</span><span class="dl">'</span><span class="p">?</span>
</code></pre></div></div>

<p>이상한 것은 console.log()로 값을 찍으면 값이 나오기는 한다는 점이다.
타입스크립트가 아직 userAgentData의 정의를 지원하지 않아서 그러는데, 다음과 같이 하면 잘 된다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nb">navigator</span> <span class="k">as</span> <span class="kr">any</span><span class="p">)?.</span><span class="nx">userAgentData</span><span class="p">?.</span><span class="nx">mobile</span>
</code></pre></div></div>

<p>타입 안정성을 해치지 않는 다른 방법도 있는데, 가독성이 너무 떨어진다.</p>]]></content><author><name>Sunmi Moon</name><email>celebmoon@naver.com</email></author><category term="React," /><category term="javascript," /><category term="Typescript" /><summary type="html"><![CDATA[모바일 기기에서만 적용되는 기능을 사용하고 싶을 수 있다. 보통은 width를 기준으로 판단하는데, 나는 기기가 정말로 모바일인지를 판단해서 적용해야 했다.]]></summary></entry><entry><title type="html">TIL) 웹 브라우저의 뒤로가기 버튼 제어하기</title><link href="http://localhost:4000/2023-06-15/TIL" rel="alternate" type="text/html" title="TIL) 웹 브라우저의 뒤로가기 버튼 제어하기" /><published>2023-06-15T12:18:07+09:00</published><updated>2023-06-15T12:18:07+09:00</updated><id>http://localhost:4000/2023-06-15/TIL</id><content type="html" xml:base="http://localhost:4000/2023-06-15/TIL"><![CDATA[<p>뒤로가기 버튼 제어하기</p>

<p>특정 url에서는 뒤로가기 버튼의 활동을 제어하고 싶을 때가 있다. url이 바뀌지는 않지만, 액션에 따라 다른 화면이 출력되는 경우 등에서이다. 사용자는 화면이 바뀌어서 다른 url로 넘어갔다고 생각하고, 앞서의 화면을 다시 보기 위해서 뒤로가기 버튼을 누르려고 할 수 있다.</p>

<p>window 인터페이스의 <code class="language-plaintext highlighter-rouge">popstate</code> 이벤트는 활성화된 세션 기록 바뀔 때 발생한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nx">useEffect</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nb">window</span><span class="p">.</span><span class="nx">history</span><span class="p">.</span><span class="nx">pushState</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nb">document</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span> <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">);</span>
    <span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">popstate</span><span class="dl">'</span><span class="p">,</span> <span class="nx">handlePrevClick</span><span class="p">);</span>

    <span class="k">return</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="nb">window</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">popstate</span><span class="dl">'</span><span class="p">,</span> <span class="nx">handlePrevClick</span><span class="p">);</span>
    <span class="p">};</span>
  <span class="p">},</span> <span class="p">[</span><span class="nx">handlePrevClick</span><span class="p">]);</span>
</code></pre></div></div>

<p>‘앞으로가기’ 버튼을 눌러도 <code class="language-plaintext highlighter-rouge">popstate</code> 이벤트가 발생한다. 이렇게 하면 앞으로가기 버튼은 비활성화된다. 사용자가 화면에 있는 ‘다음’ 버튼을 누르도록 유도하는 게 더 나은 상황이므로 이렇게 처리해 주었다.</p>

<p><code class="language-plaintext highlighter-rouge">handlePrevClick</code>에서는 정말 앞의 페이지로 가야 할 상황인지, 액션만 취소할(사용자가 보기에) 상황인지 판단하여 적절히 대응해 주었다.</p>]]></content><author><name>Sunmi Moon</name><email>celebmoon@naver.com</email></author><category term="React," /><category term="javascript," /><category term="Typescript" /><summary type="html"><![CDATA[뒤로가기 버튼 제어하기]]></summary></entry><entry><title type="html">TIL) useDispatch vs. dispatch</title><link href="http://localhost:4000/2023-06-09/TIL" rel="alternate" type="text/html" title="TIL) useDispatch vs. dispatch" /><published>2023-06-09T12:18:07+09:00</published><updated>2023-06-09T12:18:07+09:00</updated><id>http://localhost:4000/2023-06-09/TIL</id><content type="html" xml:base="http://localhost:4000/2023-06-09/TIL"><![CDATA[<p>useAppDispatch와 useAppSelector는 useDispatch, useSelector의 typed version이다.</p>

<p>useSelector를 쓸 때 state 인자에 RootState를 import해서 타입으로 넣어주는 걸 반복해야 하는데, useAppSelector를 쓰면 그러지 않아도 된다.</p>

<p>useAppDispatch를 쓰면 AppDispatch를 매번 import하지 않아도 된다.</p>

<p>실제로 redux/hooks.ts 안에 다음과 같은 내용이 있다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>export const useAppDispatch: () =&gt; AppDispatch = useDispatch;
export const useAppSelector: TypedUseSelectorHook&lt;RootState&gt; = useSelector;
</code></pre></div></div>]]></content><author><name>Sunmi Moon</name><email>celebmoon@naver.com</email></author><category term="React," /><category term="Typescript" /><summary type="html"><![CDATA[useAppDispatch와 useAppSelector는 useDispatch, useSelector의 typed version이다.]]></summary></entry><entry><title type="html">TIL) swagger 타입 수동으로 지정해 주기 - django</title><link href="http://localhost:4000/2023-05-18/TIL" rel="alternate" type="text/html" title="TIL) swagger 타입 수동으로 지정해 주기 - django" /><published>2023-05-18T12:18:07+09:00</published><updated>2023-05-18T12:18:07+09:00</updated><id>http://localhost:4000/2023-05-18/TIL</id><content type="html" xml:base="http://localhost:4000/2023-05-18/TIL"><![CDATA[<h3 id="swagger-타입을-수동으로-지정하기">swagger 타입을 수동으로 지정하기</h3>
<p>swagger가 response의 타입을 잘못 이해하고 있다면, @swagger_auto_schema로 지정해 줄 수 있다.</p>

<p>REST framework를 사용한다면 보통 serializer를 사용하므로 이게 좋은 옵션이 될 것 같다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@swagger_serializer_method(serializer_or_field=ReferralCountSerializer)
@action(detail=False, methods=['get'], url_path='count')
def count(self, request, *args, **kwargs):
   return Response(ReferralCountSerializer({'count': request.user.get_referred_count()}).data,
                   status=status.HTTP_200_OK)
</code></pre></div></div>

<h3 id="tip">TIP</h3>
<p>도커를 켜지 않은 채로 배포를 시도하다가 엄청 애를 먹었다.
배포가 제대로 되지 않음에도 불구하고, 뭔가 잘못되었다는 표시를 해주지 않다.</p>

<p>배포를 자주 하지는 않으니 도커 관련 메시지가 나타나지 않는다는 걸 바로 체감하기는 어려웠다.
swagger가 바보가 된 것 같다면 도커를 켰는지 꼭 확인하자!!</p>]]></content><author><name>Sunmi Moon</name><email>celebmoon@naver.com</email></author><category term="swagger," /><category term="django" /><summary type="html"><![CDATA[swagger 타입을 수동으로 지정하기 swagger가 response의 타입을 잘못 이해하고 있다면, @swagger_auto_schema로 지정해 줄 수 있다.]]></summary></entry><entry><title type="html">TIL) react-copy-to-clipboard에서 CopyToClipboard가 인식되지 않을 때</title><link href="http://localhost:4000/2023-05-16/TIL" rel="alternate" type="text/html" title="TIL) react-copy-to-clipboard에서 CopyToClipboard가 인식되지 않을 때" /><published>2023-05-16T12:18:07+09:00</published><updated>2023-05-16T12:18:07+09:00</updated><id>http://localhost:4000/2023-05-16/TIL</id><content type="html" xml:base="http://localhost:4000/2023-05-16/TIL"><![CDATA[<p>텍스트를 복사해 주는 기능을 만들기 위해서 react-copy-to-clipboard를 설치했다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn add react-copy-to-clipboard
</code></pre></div></div>

<p>그런데 이 패키지만 추가했더니, CopyToClipboard가 불러와지지 않았다. (임포트해지지 않음)</p>

<p>타입스크립트를 사용하므로 다음도 실행해 주었더니 작동한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn add @types/react-copy-to-clipboard
</code></pre></div></div>]]></content><author><name>Sunmi Moon</name><email>celebmoon@naver.com</email></author><category term="React" /><summary type="html"><![CDATA[텍스트를 복사해 주는 기능을 만들기 위해서 react-copy-to-clipboard를 설치했다.]]></summary></entry><entry><title type="html">TIL) serializer fields 넣어줄 때 유의점</title><link href="http://localhost:4000/2023-05-14/TIL" rel="alternate" type="text/html" title="TIL) serializer fields 넣어줄 때 유의점" /><published>2023-05-14T12:18:07+09:00</published><updated>2023-05-14T12:18:07+09:00</updated><id>http://localhost:4000/2023-05-14/TIL</id><content type="html" xml:base="http://localhost:4000/2023-05-14/TIL"><![CDATA[<p>모델의 정의와 밀접한 관련이 있는 serializer를 만들 게 될 경우가 많다.</p>

<p>모델에서 만든 필드를 전부 serializer로 만들고 싶다면 다음과 같이 <code class="language-plaintext highlighter-rouge">fields = ‘__all__’</code>을 지정해 주면 된다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class AccountSerializer(serializers.ModelSerializer):
    class Meta:
        model = Account
        fields = '__all__'
</code></pre></div></div>

<p>그런데 이걸 쓰는 게 좋지 않을 수도 있다. 나중에 모델의 필드가 변경될 수도 있는데, 공개되면 안 되는 필드가 추가되었어도 모르고 넘어가 버릴 수 있기 때문이다.</p>

<p>다음과 같이 모든 필드를 그냥 나열해 주는 게 낫다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class AccountSerializer(serializers.ModelSerializer):
    class Meta:
        model = Account
        fields = ['id', 'account_name', 'users', 'created']
</code></pre></div></div>]]></content><author><name>Sunmi Moon</name><email>celebmoon@naver.com</email></author><category term="Django," /><category term="REST" /><category term="framework" /><summary type="html"><![CDATA[모델의 정의와 밀접한 관련이 있는 serializer를 만들 게 될 경우가 많다.]]></summary></entry><entry><title type="html">TIL) postgresql permission denied for schema public</title><link href="http://localhost:4000/2023-04-10/TIL" rel="alternate" type="text/html" title="TIL) postgresql permission denied for schema public" /><published>2023-04-10T12:18:07+09:00</published><updated>2023-04-10T12:18:07+09:00</updated><id>http://localhost:4000/2023-04-10/TIL</id><content type="html" xml:base="http://localhost:4000/2023-04-10/TIL"><![CDATA[<p>postgresql의 user를 바꾸게 되었는데, 다음과 같은 에러가 발생했다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>django.db.migrations.exceptions.MigrationSchemaMissing: Unable to create the django_migrations table (permission denied for schema public
LINE 1: CREATE TABLE "django_migrations" ("id" bigserial NOT NULL PR...
</code></pre></div></div>

<p>다음과 같은 명령어를 이용해 새로 만든 계정에 모든 privilege도 다 주었는데, 왜 안 되는 걸까 한참 찾았다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GRANT ALL ON DATABASE mydb TO admin;
</code></pre></div></div>

<p>알고 보니, 소유자가 아니면 public 스키마의 데이터 베이스 생성이 안 된다고 한다.</p>

<p>열심히 검색하다가 다음과 같은 문구를 발견했다.</p>

<p>PostgreSQL 15 also revokes the CREATE permission from all users except a database owner from the public (or default) schema.</p>

<p>소유자가 아닌 사용자에게는 CREATE 권한을 거부한다는 것이다.</p>

<p>나는 superuser에서 새 계정과 새 데이터베이스를 만들었었다. 그래서 새 데이터베이스의 주인은 superuser였다. 그래서 다음과 같이 소유자를 바꾸어 주었다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ALTER DATABASE mydb OWNER TO admin;
</code></pre></div></div>

<p>소유자를 사용하려는 계정으로 바꿔 주었더니 정상 작동했다!</p>]]></content><author><name>Sunmi Moon</name><email>celebmoon@naver.com</email></author><category term="DB" /><summary type="html"><![CDATA[postgresql의 user를 바꾸게 되었는데, 다음과 같은 에러가 발생했다.]]></summary></entry><entry><title type="html">TIL) 네트워크의 기초</title><link href="http://localhost:4000/2023-04-05/TIL" rel="alternate" type="text/html" title="TIL) 네트워크의 기초" /><published>2023-04-05T12:18:07+09:00</published><updated>2023-04-05T12:18:07+09:00</updated><id>http://localhost:4000/2023-04-05/TIL</id><content type="html" xml:base="http://localhost:4000/2023-04-05/TIL"><![CDATA[<h3 id="네트워크">네트워크</h3>
<p>네트워크란 노드와 링크가 연결되어 있거나 연결되어 있지 않은 집합체를 의미한다. 컴퓨터들을 연결한 걸 네트워크라고 할 수 있다. 데이터를 주고받는 시스템 전체를 일컫는 용어로 쓰이기도 한다.</p>

<h3 id="라우터">라우터</h3>
<p>라우터는 자신에게 물려 있는 장치들의 데이터 패킷(데이터 전송에서 사용되는 데이터의 묶음)을 제어해 주는 것을 말하며, 여러 네트워크를 연결하는 역할도 한다. 인터넷 공유기도 라우터의 한 종류가 될 수 있는데, 보통 스위치와 결합되어 제공된다.</p>

<h3 id="처리량throughput">처리량(throughput)</h3>
<p>링크를 통해 전달되는 단위 시간당 데이터양을 말한다. 스루풋이라고도 하며, 백엔드에서 관심을 가져야 할 부분이다. 백엔드 단에서 만든 코드의 성능이 나쁘다면 스루풋이 안 좋아진다.</p>

<h3 id="트래픽">트래픽</h3>
<p>서버에 전송되어지는 요청의 양과 서버에서 전송하는 응답의 양을 말한다.</p>

<h3 id="지연시간">지연시간</h3>
<p>요청이 처리되는 시간을 말한다. 요청이 서버로 오는 시간, 서버에서 작업하는 시간, 서버에서 클라이언트로 응답이 가는 시간을 포함한다. 요즘에는 인터넷이 많이 빨라지면서 서버에서 코드가 얼마나 효율적으로 돌아가느냐가 지연시간에 큰 영향을 미치게 되었다.</p>

<h3 id="네트워크-토폴로지">네트워크 토폴로지</h3>
<p>네트워크를 설계할 때, 노드와 링크를 어떻게 배치하는지에 대한 배치 방식이자 연결 형태를 말한다. 트리, 버스, 스타, 링형, 메시 등의 종류가 있다.</p>]]></content><author><name>Sunmi Moon</name><email>celebmoon@naver.com</email></author><category term="CS" /><summary type="html"><![CDATA[네트워크 네트워크란 노드와 링크가 연결되어 있거나 연결되어 있지 않은 집합체를 의미한다. 컴퓨터들을 연결한 걸 네트워크라고 할 수 있다. 데이터를 주고받는 시스템 전체를 일컫는 용어로 쓰이기도 한다.]]></summary></entry></feed>